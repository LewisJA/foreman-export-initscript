#! /bin/sh
###  BEGIN INIT INFO  ###
# Application:      <%= app %>
# Process:          <%= name %>
# Description:      This file controls the <%= name %> for <%= app %>. It should be placed in /etc/init.d
# Author: Foreman (cphep script)
# Command:  bundle exec foreman export cphep /where/to/put/script -a *app_name* -l /where/to/put/logs -u *set_user* -p *set_port*
###  END INIT INFO  ###


APPLICATION=<%= app %>
PROCESS=<%= name %>
NUMBER=<%= num %>
USERNAME=<%= user %>
PIDDIR=/var/tmp/$APPLICATION   # This may be the better option.  "deploy" has write permissions here
SCRIPTNAME=<%= location %>/$APPLICATION/$PROCESS
LOG=<%= log %>

###  BEGIN FUNCTIONS  ###
# START APPLICATION: <%= app %> <%= name %>
do_start()
{
  # PREPARE ENVIRONMENT: make/set logging files/directories 
  mkdir -p $PIDDIR              # creates the PID storing directory for this run
  chown $USERNAME: $PIDDIR
  touch $LOG                    # creates the log file, if it doesn't exist. Freshens it, if it does.
  chown $USERNAME: $LOG
	
  # PREPARE ENVIRONMENT: make/set variables
  cd <%= engine.root %>;
  export PORT=<%= engine.port_for(process, num) %>;
  <% engine.environment.each_pair do |var,env| %> export <%= var.upcase %>=<%= env %>; <% end %>
	
  # RUN COMMAND: 
  <%= process.command %> -P $PIDDIR/$PROCESS.$NUMBER.pid;
  
  # RESET ENVIRONMENT: move back to starting directory
  cd - ;
}

# STOP APPLICATION: <%= app %> <%= name %>
do_stop()
{
  # CHECK FILE EXISTENCE: no process to stop if file doesn't exist
  if [ -r $PIDDIR/$PROCESS.$NUMBER.pid ]; then
    kill `cat $PIDDIR/$PROCESS.$NUMBER.pid`
    rm $PIDDIR/$PROCESS.$NUMBER.pid
    rmdir $PIDDIR
  else
    return 0
  fi
}

# CHECK APPLICATION STATUS:  <%= app %> <%= name %>
do_status()
{
  status=`ps aux | grep $APPLICATION/$PROCESS.$NUMBER.pid -c`
  if [ $status -ne 2 ]; then
    return $status
  else
        return 0
  fi
}
###  END FUNCTIONS  ###


###  BEGIN CALL HANDLING  ###
case "$1" in
  start)
	  [ "$VERBOSE" != no ] && echo "STARTING $PROCESS process for $APPLICATION application: "
	  do_start
	  do_status
    case "$?" in
      0) [ "$VERBOSE" != no ] && echo "SUCCESS - $APPLICATION $PROCESS started"
    ;;
      *) [ "$VERBOSE" != no ] && echo "FAILURE - $APPLICATION $PROCESS NOT started"
    ;;
    esac
;;

  stop)
	  [ "$VERBOSE" != no ] && echo "STOPPING $PROCESS process for $APPLICATION application: "
	  do_stop
	  case "$?" in
  		0) [ "$VERBOSE" != no ] && echo "SUCCESS"
  	;;
  		*) [ "$VERBOSE" != no ] && echo "FAILURE"
  	;;
    esac
;;

  status)
    [ "$VERBOSE" != no ] && echo "$PROCESS process for $APPLICATION application is currently: "
    do_status
    case "$?" in 
      0)  [ "$VERBOSE" != no ] && echo "RUNNING"
    ;;
      *)  [ "$VERBOSE" != no ] && echo "NOT RUNNING"
    ;;
    esac
;;

  restart)
	  echo "RESTARTING $PROCESS process for $APPLICATION application"
	  do_stop
	  case "$?" in
	    0)
		    do_start
		    do_status
		    case "$?" in
			    0) echo "SUCCESS - $APPLICATION $PROCESS restarted" ;;
			    *) echo "FAILURE - $APPLICATION $PROCESS Failed to restart" ;;
        esac
    ;;
      *)
	      echo "FAILURE"
    ;;
    esac
;;
  *)
	  echo "Usage: $SCRIPTNAME {start|stop|status|restart}" >&2
;;
esac
###  END CALL HANDLING  ###
